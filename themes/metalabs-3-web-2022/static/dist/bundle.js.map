{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/3dSlider.js","static/js/components/3dSliderModels.js","static/js/components/Cursor.js","static/js/components/NavigationController.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import gsap from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\nimport Swiper, { Navigation, Pagination } from \"swiper\";\nimport ThreeDSliderModels from \"./3dSliderModels\";\n\ngsap.registerPlugin(SplitText);\n\nexport default class ThreeDSlider {\n    constructor() {\n        this.DOM = {\n            wrapper: \".js-3d-slider-wrapper\",\n            slider: \".js-3d-slider\",\n            next: \".js-3d-slider-next\",\n            prev: \".js-3d-slider-prev\",\n            pagination: \".js-3d-slider-pagination\",\n            primaryTitle: \".js-slide-title-primary\",\n            secondaryTitle: \".js-slide-title-secondary\",\n        };\n\n        this.wrapper = document.querySelector(this.DOM.wrapper);\n    }\n\n    init() {\n        if (!this.wrapper) return;\n        this.models = new ThreeDSliderModels(this.wrapper);\n\n        const slider = this.wrapper.querySelector(this.DOM.slider);\n        const next = this.wrapper.querySelector(this.DOM.next);\n        const prev = this.wrapper.querySelector(this.DOM.prev);\n        const pagination = this.wrapper.querySelector(this.DOM.pagination);\n\n        const swiper = new Swiper(slider, {\n            modules: [Navigation, Pagination],\n            loop: false,\n            pagination: {\n                el: pagination,\n                clickable: false,\n                renderBullet: (index, className) => {\n                    return `\n                        <span class=\"${className}\">\n                            <span>\n                                <svg class=\"u-icon\" viewBox=\"0 0 12 19\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M6.18029 18.7476C9.98524 18.7476 11.5688 15.6579 11.5688 10.0807V8.66682C11.5688 3.08968 9.98524 0 6.18029 0H5.38851C1.60556 0 0 3.0635 0 8.66682V10.0807C0 15.6841 1.60556 18.7476 5.38851 18.7476H6.18029ZM5.47649 16.3387C3.34308 16.3387 2.30936 14.4272 2.30936 10.6044V8.14315C2.30936 4.32032 3.34308 2.4089 5.47649 2.4089H6.11431C8.24772 2.4089 9.28143 4.32032 9.28143 8.14315V10.6044C9.28143 14.4272 8.24772 16.3387 6.11431 16.3387H5.47649Z\"/>\n                                </svg>\n                            </span>\n                            <span>\n                                <svg class=\"u-icon\" viewBox=\"0 0 8 19\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M2.6973 1.57724L0.851562 0H7.27867L5.43294 1.57724V16.7863L7.27867 18.3635H0.851562L2.6973 16.7863V1.57724Z\"/>\n                                </svg>\n                            </span>\n                        </span>`;\n                },\n            },\n            navigation: {\n                nextEl: next,\n                prevEl: prev,\n            },\n            on: {\n                slideChange: (swiper) => {\n                    this.animateTitles(swiper);\n\n                    this.models.changeSlide(swiper.activeIndex, swiper.previousIndex);\n                },\n                afterInit: (swiper) => {\n                    setTimeout(() => this.animateTitles(swiper), 100);\n\n                    this.models.init();\n\n                    swiper.slides.forEach((slide, index) => this.models.initModel(slide, index));\n                },\n            },\n        });\n\n        swiper.slides.forEach((slide) => {\n            const titlePrimary = slide.querySelector(this.DOM.primaryTitle);\n            const titleSecondary = slide.querySelector(this.DOM.secondaryTitle);\n\n            const splitPrimary = new SplitText(titlePrimary, {\n                type: \"chars\",\n                charsClass: \"split-text-char\",\n            });\n\n            const splitSecondary = new SplitText(titleSecondary, {\n                type: \"chars\",\n                charsClass: \"split-text-char\",\n            });\n\n            gsap.set(splitPrimary.chars, {\n                visibility: \"hidden\",\n            });\n        });\n    }\n\n    animateTitles(swiper) {\n        this.animateTitleIn(swiper.slides[swiper.activeIndex]);\n\n        if (swiper.slides[swiper.previousIndex]) {\n            this.animateTitleOut(swiper.slides[swiper.previousIndex]);\n        }\n    }\n\n    animateTitleIn(slide) {\n        const titlePrimaryChars = slide.querySelector(this.DOM.primaryTitle).querySelectorAll(\".split-text-char\");\n        const titleSecondaryChars = slide.querySelector(this.DOM.secondaryTitle).querySelectorAll(\".split-text-char\");\n\n        gsap.to(titlePrimaryChars, {\n            visibility: \"visible\",\n            delay: 0.6,\n            duration: 0.2,\n            stagger: {\n                each: 0.05,\n                from: \"center\",\n            },\n        });\n\n        gsap.to(titleSecondaryChars, {\n            visibility: \"hidden\",\n            delay: 0.4,\n            duration: 0.2,\n            stagger: {\n                each: 0.05,\n                from: \"center\",\n            },\n        });\n    }\n\n    animateTitleOut(slide) {\n        const titlePrimaryChars = slide.querySelector(this.DOM.primaryTitle).querySelectorAll(\".split-text-char\");\n        const titleSecondaryChars = slide.querySelector(this.DOM.secondaryTitle).querySelectorAll(\".split-text-char\");\n\n        gsap.to(titlePrimaryChars, {\n            visibility: \"hidden\",\n        });\n\n        gsap.to(titleSecondaryChars, {\n            visibility: \"visible\",\n        });\n    }\n}\n","import gsap from \"gsap\";\nimport * as THREE from \"three\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class ThreeDSliderModels {\n    constructor(wrapper) {\n        this.DOM = {\n            models: \".js-3d-slider-models\",\n            slide: \".js-3d-slider-slide\",\n        };\n\n        this.models = wrapper.querySelector(this.DOM.models);\n\n        this.inViewport = false;\n\n        // config\n        this.config = {\n            modelOffset: 6,\n        };\n    }\n\n    init() {\n        if (!this.models) return;\n\n        this.modelsArray = [];\n\n        this.modelsWrapper = new THREE.Object3D();\n\n        this.loader = new GLTFLoader();\n\n        // loader\n        const dracoLoader = new DRACOLoader();\n        dracoLoader.setDecoderPath(window.dracoPath);\n        dracoLoader.setDecoderConfig({\n            type: \"js\",\n        });\n        this.loader.setDRACOLoader(dracoLoader);\n\n        THREE.Cache.enabled = true;\n\n        ScrollTrigger.create({\n            trigger: this.models,\n            start: \"top bottom\",\n            end: \"bottom top\",\n            onEnter: () => {\n                this.inViewport = true;\n            },\n            onLeave: () => {\n                this.inViewport = false;\n            },\n            onEnterBack: () => {\n                this.inViewport = true;\n            },\n            onLeaveBack: () => {\n                this.inViewport = false;\n            },\n        });\n\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n\n        this.initCamera();\n        this.initScene();\n        this.initLights();\n        this.initRenderer();\n        this.animate();\n        this.mouseMove();\n\n        this.scene.add(this.modelsWrapper);\n\n        // handle resize\n        window.addEventListener(\"resize\", () => this.onWindowResize(), false);\n    }\n\n    mouseMove() {\n        window.addEventListener(\"mousemove\", (ev) => {\n            let mouseY = ev.clientY;\n\n            gsap.to(this.yellowLight.position, {\n                y: -1 - (mouseY - window.innerHeight) / 400,\n            });\n\n            gsap.to(this.blueLight.position, {\n                y: -(mouseY - window.innerHeight) / 400,\n            });\n        });\n    }\n\n    /**\n     * camera setup\n     */\n    initCamera() {\n        this.camera = new THREE.PerspectiveCamera(35, this.width / this.height, 0.5, 100);\n        this.camera.position.set(0, 0, 6);\n        this.camera.lookAt(0, 0, 0);\n    }\n\n    /**\n     * scene setup\n     */\n    initScene() {\n        this.scene = new THREE.Scene();\n    }\n\n    /**\n     * lights setup - because of performance > all in one object\n     */\n    initLights() {\n        const lightWrapper = new THREE.Object3D();\n\n        this.yellowLight = new THREE.PointLight(0xfeb301, 5, 4);\n        this.yellowLight.position.set(-1, 1, 2);\n        // this.yellowLight.castShadow = true;\n\n        this.blueLight = new THREE.PointLight(0x2400ff, 5, 2);\n        this.blueLight.position.set(1, 0, 1);\n        // this.blueLight.castShadow = true;\n\n        lightWrapper.add(this.blueLight);\n        lightWrapper.add(this.yellowLight);\n\n        this.scene.add(lightWrapper);\n    }\n\n    /**\n     * renderer setup\n     */\n    initRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            powerPreference: \"high-performance\",\n            alpha: true,\n        });\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        this.renderer.setClearColor(0x000000, 0);\n        this.renderer.setPixelRatio(window.devicePixelRatio > 2 ? 2 : window.devicePixelRatio);\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.physicallyCorrectLights = true;\n        this.models.appendChild(this.renderer.domElement);\n    }\n\n    /**\n     * model setup and load call\n     */\n    initModel(slide, index) {\n        if (!slide) return;\n\n        this.loader.load(\n            slide.dataset.model,\n            (gltf) => {\n                gltf.scene.rotation.y = -Math.PI / 2;\n\n                gltf.scene.position.x = index * this.config.modelOffset;\n\n                gltf.scene.uuid = index;\n\n                this.modelsArray.push(gltf.scene);\n\n                this.modelsWrapper.add(gltf.scene);\n            },\n            (xhr) => {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\"); /**/\n            },\n            (error) => {\n                console.log(\"An error happened\");\n            },\n        );\n    }\n\n    /**\n     *\n     */\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    /**\n     * requestAnimationFrame\n     */\n    animate() {\n        let raf = null;\n\n        const animate = () => {\n            this.renderer.render(this.scene, this.camera);\n            if (this.renderer != null) {\n                raf = requestAnimationFrame(animate);\n            }\n        };\n\n        ScrollTrigger.create({\n            trigger: this.models,\n            start: \"top bottom\",\n            end: \"bottom top\",\n            onEnter: () => {\n                raf = requestAnimationFrame(animate);\n            },\n            onLeave: () => {\n                cancelAnimationFrame(raf);\n            },\n            onEnterBack: () => {\n                raf = requestAnimationFrame(animate);\n            },\n            onLeaveBack: () => {\n                cancelAnimationFrame(raf);\n            },\n        });\n    }\n\n    changeSlide(index, prevIndex) {\n        const model = this.modelsArray.find((model) => model.uuid === index);\n        const prevModel = this.modelsArray.find((model) => model.uuid === prevIndex);\n\n        const direction = prevIndex > index ? 1 : -1;\n\n        gsap.timeline()\n            .add(\"start\")\n            .to(\n                this.modelsWrapper.position,\n                {\n                    x: -index * this.config.modelOffset,\n                    duration: 2,\n                    ease: \"power4.out\",\n                },\n                \"start\",\n            )\n            .fromTo(\n                model.rotation,\n                {\n                    y: -Math.PI / 2 + 2.5 * direction,\n                },\n                {\n                    y: -Math.PI / 2,\n                    duration: 2,\n                    ease: \"power4.out\",\n                },\n                \"start\",\n            )\n            .fromTo(\n                prevModel.rotation,\n                {\n                    y: -Math.PI / 2,\n                },\n                {\n                    y: -Math.PI / 2 + -2.5 * direction,\n                    duration: 2,\n                    ease: \"power4.out\",\n                },\n                \"start\",\n            );\n    }\n}\n","import gsap from \"gsap\";\nimport is from \"is_js\";\n\nexport default class Cursor {\n    constructor() {\n        this.DOM = {\n            wrapper: \".js-cursor\",\n        };\n\n        this.wrapper = document.querySelector(this.DOM.wrapper);\n        this.moved = false;\n    }\n\n    init() {\n        if (!this.wrapper || is.touchDevice()) return;\n\n        const offsetY = this.wrapper.offsetHeight * 0.5;\n        const offsetX = this.wrapper.offsetWidth * 0.05;\n\n        window.addEventListener(\"pointermove\", (ev) => {\n            if (!this.moved) {\n                this.moved = true;\n                this.wrapper.classList.add(\"is-moved\");\n            }\n\n            gsap.set(this.wrapper, {\n                x: ev.clientX - offsetX,\n                y: ev.clientY - offsetY,\n            });\n        });\n\n        window.addEventListener(\"mouseout\", (ev) => {\n            this.moved = false;\n            this.wrapper.classList.remove(\"is-moved\");\n        });\n\n        document.querySelectorAll(\"a\").forEach((link) => {\n            this.singleLink(link);\n        });\n\n        document.querySelectorAll(\".has-hover\").forEach((link) => {\n            this.singleLink(link);\n        });\n    }\n\n    singleLink(link) {\n        link.addEventListener(\"mouseenter\", () => {\n            this.wrapper.classList.add(\"is-active\");\n        });\n\n        link.addEventListener(\"mouseleave\", () => {\n            this.wrapper.classList.remove(\"is-active\");\n        });\n    }\n}\n","/**\n * Navigation controller\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n        this.DOM = {\n            navigation: \".js-navigation\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n\n    /**\n     *\n     */\n    init() {\n        if (this.navigation !== null) {\n            console.log(\"Navigation init()\");\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(this.DOM.states.navigationScrolled);\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","/**\n * Grid helper\n * Show grid overlay when developing\n * Not included in production bundle JS file\n */\nexport default class GridHelper {\n    constructor() {\n        /**\n         * Grid DOM selector\n         * @type {{grid: string}}\n         */\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        /**\n         * Grid options\n         * @type {{\n         * gutterFixed: boolean,\n         * initialDisplay: string,\n         * gridFixed: boolean,\n         * gutterWidth: number,\n         * gridColor: string,\n         * columnCount: number,\n         * gridWidth: number,\n         * columnBgColor: string\n         * }}\n         */\n        this.gridOptions = {\n            initialDisplay: \"none\", // \"flex\" or \"none\" — initial display for the grid — string\n            columnCount: 24, // number of grid columns — integer\n            gridWidth: 1440, // base grid used in design; value in px — integer\n            gridFixed: true, // should grid width be restricted to gridWidth or it should go full width a nd behave fluidly across all screen sizes\n            gutterWidth: 0, // grid gutters value in px — integer\n            gutterFixed: false, // should grid gutter be a fixed value (px) or fluid — integer\n            gridColor: \"rgb(255, 0, 255, 0.15)\", // grid guides color — string of an rgba or hex value\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\", // grid columns background color — string of an rgba or hex value\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth - (this.gridOptions.columnCount - 1) * this.gridOptions.gutterWidth) / this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${(this.columnWidth / this.gridOptions.gridWidth) * 100}%`;\n\n        this.gutterWidthPercentage = `${(this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100}%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            height: 100%;\n            position: fixed;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (this.gridOptions.gridFixed === true) {\n            this.grid.style.maxWidth = `${this.gridOptions.gridWidth}px`;\n        }\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","/**\n * MAIN JS FILE\n */\n\n/**\n * Helpers\n * Imports of helper functions are stripped out of bundle\n * Include them within \"start-strip-code\" and \"end-strip-code\" comments\n */\n/* start-strip-code */\nimport GridHelper from \"./helpers/GridHelper\";\n/* end-strip-code */\n/**\n * Components\n */\nimport NavigationController from \"./components/NavigationController\";\nimport Cursor from \"./components/Cursor\";\nimport ThreeDSlider from \"./components/3dSlider\";\n\n/**\n * Check if document is ready cross-browser\n * @param callback\n */\nconst ready = (callback) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callback();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callback();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    /**\n     * HELPERS INIT\n     * Only init helpers if they exist\n     * Will be undefined on production because of import stripping\n     */\n    if (typeof GridHelper == \"function\") {\n        const grid = new GridHelper();\n        grid.init();\n    }\n\n    const doc = document.documentElement;\n    doc.style.setProperty(\"--win-height\", `${window.innerHeight}px`);\n\n    /**\n     * COMPONENTS INIT\n     */\n\n    /**\n     * Navigation\n     * @type {NavigationController}\n     */\n    const navigation = new NavigationController();\n    navigation.init();\n\n    /**\n     * ThreeDSlider\n     * @type {ThreeDSlider}\n     */\n    const threeDSlider = new ThreeDSlider();\n    threeDSlider.init();\n\n    setTimeout(() => {\n        /**\n         * Cursor\n         * @type {Cursor}\n         */\n        const cursor = new Cursor();\n        cursor.init();\n    }, 500);\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}